package kyu7;

/**
 * A coloured triangle is created from a row of colours, each of which is red, green or blue.
 * Successive rows, each containing one fewer colour than the last, are generated by considering the
 * two touching colours in the previous row. If these colours are identical, the same colour is used
 * in the new row. If they are different, the missing colour is used in the new row. This is
 * continued until the final row, with only a single colour, is generated. You will be given the
 * first row of the triangle as a string and its your job to return the final colour which would
 * appear in the bottom row as a string. In the case of the example above, you would the given
 * RRGBRGBB you should return G.
 * <p>
 * The input string will only contain the uppercase letters R, G, B and there will be at least one
 * letter so you do not have to test for invalid input. If you are only given one colour as the
 * input, return that colour.
 */

public class ColouredTriangles {

  public static char triangle(final String row) {
    if (row.length() == 1) {
      return row.charAt(0);
    }

    StringBuilder string = new StringBuilder();
    for (int i = 1; i < row.length(); i++) {
      char c1 = row.charAt(i - 1), c2 = row.charAt(i);
      switch (c1) {
        case 'R' -> string.append(c2 == 'R' ? 'R' : c2 == 'G' ? 'B' : 'G');
        case 'G' -> string.append(c2 == 'R' ? 'B' : c2 == 'G' ? 'G' : 'R');
        case 'B' -> string.append(c2 == 'R' ? 'G' : c2 == 'G' ? 'R' : 'B');
      }
    }
    return triangle(string.toString());
  }
}
